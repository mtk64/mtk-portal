# =====================================================================
# File    : .github/workflows/manual-commit.yml
# Name    : Manual Commit + Deploy
# ---------------------------------------------------------------------
# Change History
# - v1.0  (2025-08-18)  Initial workflow
# - v1.1  (2025-08-18)  Build-Timestamp (UTC) stempeln + einfache Verifikation
# - v1.2  (2025-08-18)  Build-Info erweitert (Branch, Commit, Run)
# - v1.3  (2025-08-18)  Zeitstempel: UTC + Europe/Berlin; strenge Verifikation
# - v1.4  (2025-08-18)  Regex robuster; Verifikation angepasst
# - v1.4.1(2025-08-18)  Debug vor/nach Stempel; tokenbasierte Verifikation
# - v1.5  (2025-08-18)  Perl-frei (sed); Verify als eigener Step (continue-on-error)
# - v1.6  (2025-08-18)  Fehlertolerant; ausführliches Logging
# - v1.7  (2025-08-18)  Robuste Datei-Erkennung + Ersetzen ODER Einfügen; stabile Verify
# - v1.8  (2025-08-18)  Vor Deploy ALLE alten Build-Fragmente entfernen und
#                      GENAU EINE neue Anker-Zeile einfügen (UTC/Berlin · branch · #sha · Run)
# - v1.9  (2025-08-20)  Concurrency + saubere Summary + robuste Artefakt-Übergabe an QA
# =====================================================================

name: Manual Commit + Deploy

on:
  workflow_dispatch:
    inputs:
      note:
        description: "Kurznote fürs Protokoll"
        required: false
        default: "Manual deploy"

permissions:
  contents: write
  pages: write
  id-token: write

# Verhindert parallele Seiten-Deploys
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  commit-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: alle lokalen Änderungen mitnehmen
      - name: Auto-commit (optional)
        run: |
          git config --global user.name  "MTK-AutoCommit"
          git config --global user.email "mtk-bot@example.com"
          git add -A
          git commit -m "Automated commit via workflow" || echo "No changes to commit"
          git push || true

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Verify portal files exist
        run: |
          test -f mtk-portal-upload/index.html || { echo "mtk-portal-upload/index.html fehlt"; exit 1; }

      # Ein Build‑Anker wird deterministisch erzeugt:
      #   Projektanker: PRJ-... · Build 2025-08-18 13:27Z / 2025-08-18 15:27 Europe/Berlin · main · #abc1234 · Run 42
      - name: Stamp Build Anchor (UTC + Europe/Berlin)
        id: stamp
        shell: bash
        run: |
          set -euo pipefail
          FILE="mtk-portal-upload/index.html"

          UTC="$(date -u '+%Y-%m-%d %H:%MZ')"
          BERLIN_TZ="Europe/Berlin"
          BERLIN="$(TZ="$BERLIN_TZ" date '+%Y-%m-%d %H:%M')"
          BRANCH="${GITHUB_REF_NAME}"
          SHA7="$(echo "${GITHUB_SHA}" | cut -c1-7)"
          RUN="${GITHUB_RUN_NUMBER}"

          # Alte Anker-Zeilen vollständig entfernen (robust; egal ob alt/neu formatiert)
          sed -i \
            -e 's/·[[:space:]]*Build[[:space:]][0-9:-]\{16,20\}[[:space:]]*Z[[:space:]]*\/[[:space:]][0-9:-]\{16,20\}[[:space:]]*Europe\/Berlin//g' \
            -e 's/·[[:space:]]*[mM]ain[[:space:]]*·[[:space:]]*#[0-9a-f]\{7\}//g' \
            -e 's/·[[:space:]]*Run[[:space:]][0-9]\+//g' \
            "$FILE"

          # Falls noch keine „Projektanker: …“-Zeile existiert, hänge sie in den Willkommens-Block an
          if ! grep -q 'Projektanker:' "$FILE"; then
            ANCHOR_LINE='    <p class="muted">Projektanker: <code>PRJ-2025-08-WEBPORTAL-LIGHT</code></p>'
            # minimal robust: nach dem ersten </ul> einfügen (liegt in deinem Intro-Card)
            awk -v ins="$ANCHOR_LINE" '
              {print}
              /<\/ul>/ && !done { print ins; done=1 }
            ' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
          fi

          # Genau EINE frische Anker-Zeile erzeugen
          # (ersetzt vorhandene „Projektanker: …“-Zeile komplett)
          NEW="Projektanker: PRJ-2025-08-WEBPORTAL-LIGHT · Build ${UTC} / ${BERLIN} Europe/Berlin · ${BRANCH} · #${SHA7} · Run ${RUN}"
          awk -v repl="$NEW" '
            BEGIN{done=0}
            {
              if (!done && $0 ~ /Projektanker:/) {
                sub(/Projektanker:.*/, repl); print; done=1
              } else print
            }
          ' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"

          echo "utc=${UTC}"           >> $GITHUB_OUTPUT
          echo "berlin=${BERLIN}"     >> $GITHUB_OUTPUT
          echo "branch=${BRANCH}"     >> $GITHUB_OUTPUT
          echo "sha7=${SHA7}"         >> $GITHUB_OUTPUT
          echo "run=${RUN}"           >> $GITHUB_OUTPUT

      - name: Upload artifact (mtk-portal-upload)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./mtk-portal-upload

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Summary
        shell: bash
        run: |
          echo "## Deploy Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "- Stamped: Build ${{ steps.stamp.outputs.utc }} / ${{ steps.stamp.outputs.berlin }} Europe/Berlin · ${{ steps.stamp.outputs.branch }} · #${{ steps.stamp.outputs.sha7 }} · Run ${{ steps.stamp.outputs.run }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Version: $(date +%Y.%m.%d)-${{ github.run_number }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Branch:  ${{ steps.stamp.outputs.branch }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Commit:  ${{ steps.stamp.outputs.sha7 }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Run:     ${{ steps.stamp.outputs.run }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Note:    ${{ github.event.inputs.note }}" >> "$GITHUB_STEP_SUMMARY"
