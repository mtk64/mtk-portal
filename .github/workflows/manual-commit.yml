# =====================================================================
# File: .github/workflows/manual-commit.yml
# Version: v1.6 (2025-08-18)
# Change History:
# - v1.0  Initial workflow
# - v1.1  Verify + Build Timestamp (UTC)
# - v1.2  Build Info erweitert (Branch, Commit, Run)
# - v1.3  UTC+Berlin + strenge Verifikation (failte)
# - v1.4  Regex robuster; Verifikation gefixt
# - v1.5  Perl-frei; sed; Verify separat
# - v1.6  Fehlertolerant; keine harten Abbrüche; ausführliches Logging
# =====================================================================

name: Manual Commit + Deploy

on:
  workflow_dispatch:
    inputs:
      note:
        description: "Kurznotiz fürs Protokoll"
        required: false
        default: "Manual deploy"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  commit-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: commit/push, falls durch vorherige Schritte Dateien geändert wurden
      - name: Auto-commit (optional)
        run: |
          git config --global user.name "MTK-AutoCommit"
          git config --global user.email "mtk-bot@example.com"
          git add -A
          git commit -m "Automated commit via workflow" || echo "No changes to commit"
          git push || true

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Verify portal files exist
        run: |
          if [ ! -f mtk-portal-upload/index.html ]; then
            echo "mtk-portal-upload/index.html fehlt"
            exit 1
          fi
          echo "index.html gefunden."

      - name: Show current Build line (before)
        run: |
          echo "--- BEFORE (erste Zeile mit 'Build '):"
          grep -n "Build " -m 1 mtk-portal-upload/index.html || echo "keine Build-Zeile gefunden"

      - name: Stamp Build Tag and Write Version
        id: stamp
        env:
          BRANCH: ${{ github.ref_name }}
          SHA_FULL: ${{ github.sha }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          NOTE: ${{ github.event.inputs.note }}
        run: |
          # kein 'set -e' → wir protokollieren und behandeln selbst
          ts_utc="$(date -u '+%Y-%m-%d %H:%M')Z"
          ts_berlin="$(TZ=Europe/Berlin date '+%Y-%m-%d %H:%M')"
          shortsha="${SHA_FULL:0:7}"
          f="mtk-portal-upload/index.html"
          new="Build ${ts_utc} / ${ts_berlin} Europe/Berlin · ${BRANCH} · #${shortsha} · Run ${RUN_NUMBER}"

          # Ersetzung mit sed:
          sed -E -i "s/Build [^<\r\n]*/${new}/" "$f" 2>/dev/null || true
          # Falls das nicht gegriffen hat (z.B. kein '<' in der Zeile) → bis Zeilenende
          grep -qF "${new}" "$f" || sed -E -i "s/Build .*/${new}/" "$f" 2>/dev/null || true

          echo "Stamped new line (AFTER):"
          grep -n "Build " -m 1 "$f" || echo "Build-Zeile nach Ersetzung nicht gefunden"

          # Versionierung (CM)
          ver="$(date -u '+%Y.%m.%d')-${RUN_NUMBER}"
          printf "%s\n" "${ver}" > mtk-portal-upload/VERSION
          cat > mtk-portal-upload/version.json <<JSON
          {
            "version": "${ver}",
            "time_utc": "$(date -u '+%Y-%m-%dT%H:%M:00Z')",
            "time_europe_berlin": "${ts_berlin}",
            "branch": "${BRANCH}",
            "commit": "${shortsha}",
            "run_id": "${RUN_ID}",
            "run_number": ${RUN_NUMBER},
            "note": "${NOTE}"
          }
          JSON

          {
            echo "## Deploy Summary"
            echo ""
            echo "- **Stamped (full):** ${new}"
            echo "- **Version:** ${ver}"
            echo "- **Branch:** ${BRANCH}"
            echo "- **Commit:** ${shortsha}"
            echo "- **Run:** ${RUN_NUMBER}"
            echo "- **UTC/Berlin:** ${ts_utc} / ${ts_berlin}"
            echo "- **Note:** ${NOTE}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Verify stamped tokens (non-blocking)
        id: verify
        continue-on-error: true
        env:
          BRANCH: ${{ github.ref_name }}
          SHA_FULL: ${{ github.sha }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          ts_utc="$(date -u '+%Y-%m-%d %H:%M')Z"
          ts_berlin="$(TZ=Europe/Berlin date '+%Y-%m-%d %H:%M')"
          shortsha="${SHA_FULL:0:7}"
          f="mtk-portal-upload/index.html"
          ok=1
          grep -qF "${ts_utc}"         "$f" || { echo "Token fehlt: ${ts_utc}"; ok=0; }
          grep -qF "${ts_berlin}"      "$f" || { echo "Token fehlt: ${ts_berlin}"; ok=0; }
          grep -qF "${BRANCH}"         "$f" || { echo "Token fehlt: ${BRANCH}"; ok=0; }
          grep -qF "#${shortsha}"      "$f" || { echo "Token fehlt: #${shortsha}"; ok=0; }
          grep -qF "Run ${RUN_NUMBER}" "$f" || { echo "Token fehlt: Run ${RUN_NUMBER}"; ok=0; }
          if [ "$ok" = "1" ]; then
            echo "verify_status=ok" >> $GITHUB_OUTPUT
            echo "✅ Verify OK" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "verify_status=fail" >> $GITHUB_OUTPUT
            echo "❌ Verify FAILED (Tokens fehlten, siehe Log)" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload artifact (mtk-portal-upload)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./mtk-portal-upload

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Summary — Verify result
        run: |
          echo "### Verify result: ${{ steps.verify.outputs.verify_status || 'n/a' }}" >> "$GITHUB_STEP_SUMMARY"
