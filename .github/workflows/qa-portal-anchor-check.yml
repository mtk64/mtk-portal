# =====================================================================
# File    : .github/workflows/qa-portal-anchor-check.yml
# Name    : QA - Portal Anchor Check
# Version : v1.4-safe-min
# =====================================================================

name: QA - Portal Anchor Check

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Portal-URL (leer = automatisch)"
        required: false
        default: ""

permissions:
  contents: read

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: Compute site URL
        id: site
        run: |
          if [ -n "${{ github.event.inputs.url }}" ]; then
            echo "url=${{ github.event.inputs.url }}" >> $GITHUB_OUTPUT
          else
            echo "url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository }}"/ | sed 's#.*/##' > repo.txt
            echo "url=https://${{ github.repository_owner }}.github.io/$(cat repo.txt)/" >> $GITHUB_OUTPUT
          fi
          echo "URL=${{ steps.site.outputs.url }}"

      - name: Fetch portal (no-cache) & text view
        run: |
          curl -sS -H 'Cache-Control: no-cache, no-store, max-age=0' -H 'Pragma: no-cache' \
               "${{ steps.site.outputs.url }}?nocache=$(date +%s)" -o portal.html
          test -s portal.html || { echo "Leere Seite"; exit 1; }
          sed -E 's/<[^>]+>//g' portal.html > portal.txt
          echo "--- Lines with 'Projektanker' ---"
          grep -n "Projektanker" portal.txt || true

      - name: Validate anchor (regex only)
        run: |
          python3 - << 'PY'
import re, sys, pathlib
t = pathlib.Path("portal.txt").read_text(encoding="utf-8", errors="ignore")
lines = [ln.strip() for ln in t.splitlines() if "Projektanker" in ln]
if len(lines) != 1:
  print(f"FAIL: Erwartet 1 Zeile 'Projektanker', gefunden {len(lines)}")
  for l in lines[:5]: print(">>", l)
  sys.exit(2)
line = lines[0]
rx = re.compile(
  r"Projektanker:\s*PRJ-\d{4}-\d{2}-[A-Z0-9-]+"
  r"\s*路\s*Build\s+\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}Z"
  r"\s*/\s*\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}\s+Europe/Berlin"
  r"\s*路\s*[a-z0-9/_-]+"
  r"\s*路\s*#[0-9a-f]{7}"
  r"\s*路\s*Run\s+\d+\s*$",
  re.IGNORECASE
)
if not rx.search(line):
  print("FAIL: Regex-Match fehlgeschlagen.")
  print("LINE:", line)
  sys.exit(3)
print("PASS")
PY
